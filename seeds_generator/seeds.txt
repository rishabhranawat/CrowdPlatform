http://www.geeksforgeeks.org/dynamic-programming-set-23-bellman-ford-algorithm/
https://www.britannica.com/topic/graph-theory
https://en.wikipedia.org/wiki/Bellman%E2%80%93Ford_algorithm
https://en.wikipedia.org/wiki/Graph_theory
https://en.wikipedia.org/wiki/Kruskal%27s_algorithm
http://www.geeksforgeeks.org/strongly-connected-components/
https://stackoverflow.com/questions/1195872/kruskal-vs-prim
https://en.wikipedia.org/wiki/Strongly_connected_component
https://en.wikipedia.org/wiki/Bellman%E2%80%93Ford_algorithm
http://www.geeksforgeeks.org/dynamic-programming-set-23-bellman-ford-algorithm/
https://www.youtube.com/watch?v=iTW2yFYd1Nc
https://algs4.cs.princeton.edu/lectures/44DemoBellmanFord.pdf
http://courses.csail.mit.edu/6.006/spring11/lectures/lec15.pdf
https://brilliant.org/wiki/bellman-ford-algorithm/
https://www.thecrazyprogrammer.com/2017/06/bellman-ford-algorithm-in-c-and-c.html
http://www.programming-algorithms.net/article/47389/Bellman-Ford-algorithm
http://www.stoimen.com/blog/2012/10/22/computer-algorithms-bellman-ford-shortest-path-in-a-graph/
http://faculty.ycp.edu/~dbabcock/PastCourses/cs360/lectures/lecture21.html
https://en.wikipedia.org/wiki/Graph_theory
https://www.britannica.com/topic/graph-theory
http://jwilson.coe.uga.edu/EMAT6680/Yamaguchi/emat6690/essay1/GT.html
http://primes.utm.edu/graph/
http://mathworld.wolfram.com/GraphTheory.html
https://en.wikipedia.org/wiki/Graph_(discrete_mathematics)
http://math.tut.fi/~ruohonen/GT_English.pdf
https://simple.wikipedia.org/wiki/Graph_theory
http://cs.bme.hu/fcs/graphtheory.pdf
http://whatis.techtarget.com/definition/graph-theory
https://en.wikipedia.org/wiki/Strongly_connected_component
http://www.geeksforgeeks.org/strongly-connected-components/
http://www.acmescience.com/category/shows/scc-shows/
http://theory.stanford.edu/~tim/w11/l/scc.pdf
https://en.wikipedia.org/wiki/Tarjan%27s_strongly_connected_components_algorithm
http://interactivepython.org/runestone/static/pythonds/Graphs/StronglyConnectedComponents.html
http://mathworld.wolfram.com/StronglyConnectedComponent.html
http://www.ics.uci.edu/~eppstein/161/960220.html
http://www.columbia.edu/~cs2035/courses/csor4231.F11/scc.pdf
https://www.youtube.com/watch?v=ju9Yk7OOEb8
https://en.wikipedia.org/wiki/Kruskal%27s_algorithm
https://stackoverflow.com/questions/1195872/kruskal-vs-prim
http://www.differencebetween.com/difference-between-kruskal-and-vs-prim/
https://en.wikipedia.org/wiki/Prim%27s_algorithm
https://www.quora.com/What-is-the-difference-between-Dijkstras-Kruskals-and-Prims-algorithms
https://www.cut-the-knot.org/ctk/Mazes.shtml
http://math2.uncc.edu/~ghetyei/courses/old/F05.3116/kruskal.pdf
https://www.thestudentroom.co.uk/showthread.php?t=232168
https://stackoverflow.com/questions/7320465/applications-of-kruskal-and-prims-algorithms
https://www.quora.com/What-is-the-difference-in-Kruskals-and-Prims-algorithm
https://en.wikipedia.org/wiki/Maximum_flow_problem
https://www.topcoder.com/community/data-science/data-science-tutorials/maximum-flow-section-1/#!
http://www.cs.princeton.edu/courses/archive/spr04/cos226/lectures/maxflow.4up.pdf
http://www.me.utexas.edu/~jensen/models/network/net11.html
https://www.cs.purdue.edu/homes/ayg/CS251/slides/chap10c.pdf
http://www.excel-easy.com/examples/maximum-flow-problem.html
http://www.me.utexas.edu/~jensen/methods/net.pdf/netmaxf.pdf
https://en.wikipedia.org/wiki/Max-flow_min-cut_theorem
https://algs4.cs.princeton.edu/64maxflow/index.php
https://www.topcoder.com/community/data-science/data-science-tutorials/maximum-flow-augmenting-path-algorithms-comparison/
https://stackoverflow.com/questions/3466242/multithreaded-merge-sort
https://codingrush.wordpress.com/2012/10/31/multithreaded-merge-sort/
https://github.com/afrozenator/Multithreaded
https://codereview.stackexchange.com/questions/22744/multi-threaded-sort
https://www.codeproject.com/articles/1062000/multithreaded-parallel-selection-sort-algorithm-us
http://zobayer.blogspot.com/2010/09/threaded-merge-sort.html
http://www.bogotobogo.com/Algorithms/mergesort.php
https://github.com/CAntol/Multi-Threaded-Mergesort/blob/master/mergesort.c
https://www.youtube.com/watch?v=xKZAhztgAJA
https://www.linuxquestions.org/questions/programming-9/threaded-merge-sort-319087/
http://www.cs.fsu.edu/~burmeste/slideshow/chapter7/7-2.html
https://stackoverflow.com/questions/19280146/maintaining-heap-property-of-stdpriority-queue
http://www.eecs.wsu.edu/~cook/aa/lectures/l3/node4.html
https://en.wikipedia.org/wiki/Heap_%28data_structure%29
https://cyberzhg.gitbooks.io/clrs/content/Chapter_06_Heapsort/exercises_6.2.html
https://www.youtube.com/watch?v=ScF985Y4DJc
https://users.cs.duke.edu/~reif/courses/alglectures/littman.lectures/lect08/node15.html
https://en.wikipedia.org/wiki/Binary_heap
http://interactivepython.org/runestone/static/pythonds/Trees/BinaryHeapImplementation.html
https://en.wikipedia.org/wiki/Sorting
http://www.dictionary.com/browse/sorting
http://sorting.at/
https://www.cs.cmu.edu/~adamchik/15-121/lectures/Sorting%20Algorithms/sorting.html
https://algs4.cs.princeton.edu/20sorting/
https://www.toptal.com/developers/sorting-algorithms
https://www.thefreedictionary.com/sorting
https://msdn.microsoft.com/en-us/library/hh179484(v=nav.90).aspx
https://en.wikipedia.org/wiki/Sorting_algorithm
https://www.merriam-webster.com/dictionary/sort
https://en.wikipedia.org/wiki/Strassen_algorithm
http://www.geeksforgeeks.org/strassens-matrix-multiplication/
http://www.stoimen.com/blog/2012/11/26/computer-algorithms-strassens-matrix-multiplication/
https://stackoverflow.com/questions/1920031/strassens-algorithm-for-matrix-multiplication
https://software.intel.com/sites/default/files/m/c/d/5/3/d/24469-Strassen_akki.pdf
https://stackoverflow.com/questions/13559928/why-is-my-strassens-matrix-multiplication-slow
https://webpages.uncc.edu/ras/Strassen.ppt
http://wikistack.com/strassens-matrix-multiplication-in-c/
http://mathworld.wolfram.com/StrassenFormulas.html
https://martin-thoma.com/strassen-algorithm-in-python-java-cpp/
https://sites.google.com/site/mytechnicalcollection/algorithms/graphs/minimum-spanning-trees/growing-a-minimum-spanning-tree
https://www.cs.princeton.edu/~rs/AlgsDS07/14MST.pdf
https://algs4.cs.princeton.edu/lectures/43MinimumSpanningTrees.pdf
https://algs4.cs.princeton.edu/43mst/
https://www.hackerearth.com/practice/algorithms/graphs/minimum-spanning-tree/tutorial/
https://cyberzhg.gitbooks.io/clrs/Chapter_23_Minimum_Spanning_Trees/exercises_23.1.html
https://www.cse.ust.hk/~dekai/271/notes/L07/L07.pdf
https://en.wikipedia.org/wiki/Minimum_spanning_tree
http://www.cs.columbia.edu/~cs4203/files/GT-Lec5.pdf
https://en.wikipedia.org/wiki/Simplex_algorithm
http://people.seas.harvard.edu/~yaron/AM221/lecture_notes/AM221_lecture7.pdf
http://pblpathways.com/fm/C4_3_3.pdf
http://www2.isye.gatech.edu/~spyros/LP/node20.html
https://www.linearprogramming.info/what-is-a-basic-feasible-solution-in-linear-programming/
https://en.wikipedia.org/wiki/Basic_solution_(Linear_programming)
https://encyclopedia2.thefreedictionary.com/basic+feasible+solution
https://www.quora.com/Whats-the-difference-between-a-basic-solution-a-feasible-solution-and-a-basic-feasible-solution-in-linear-programming
https://math.stackexchange.com/questions/677278/finding-all-basic-feasible-solutions-in-a-linear-program
http://www.columbia.edu/~cs2035/courses/ieor3608.F05/bigm1.pdf
https://en.wikipedia.org/wiki/Counting_sort
https://stackoverflow.com/questions/14368392/radix-sort-vs-counting-sort-vs-bucket-sort-whats-the-difference
https://en.wikipedia.org/wiki/Radixsort
https://www.cs.princeton.edu/~rs/AlgsDS07/18RadixSort.pdf
https://alg12.wikischolars.columbia.edu/file/view/RADIX.pdf/299792868/RADIX.pdf
https://www.quora.com/Algorithms-What-is-the-difference-between-Radix-sort-Bucket-sort-and-Counting-sort
https://stackoverflow.com/questions/30859766/radix-sort-using-counting-sort
https://brilliant.org/wiki/radix-sort/
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/lecture-videos/lecture-7-counting-sort-radix-sort-lower-bounds-for-sorting/
http://www.geeksforgeeks.org/radix-sort/
https://www.amazon.com/Introduction-Algorithms-3rd-MIT-Press/dp/0262033844
https://mitpress.mit.edu/books/introduction-algorithms
https://www.goodreads.com/book/show/108986.Introduction_to_Algorithms
https://en.wikipedia.org/wiki/Introduction_to_Algorithms
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/
https://mitpress.mit.edu/sites/default/files/titles/content/9780262033848_sch_0001.pdf
https://books.google.com/books/about/Introduction_To_Algorithms.html?id=NLngYyWFl_YC
https://www.ebay.com/sch/i.html?_nkw=introduction+to+algorithms
http://bayanbox.ir/view/4177858657730907268/introduction-to-algorithms-3rd-edition.pdf
https://www.quora.com/How-should-I-self-study-Introduction-to-Algorithms
https://en.wikipedia.org/wiki/Depth-first_search
https://www.ics.uci.edu/~eppstein/161/960215.html
http://www.cs.toronto.edu/~heap/270F02/node36.html
https://www.youtube.com/watch?v=iaBEKo5sM7w
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/lecture-videos/lecture-14-depth-first-search-dfs-topological-sort/
http://ww3.algorithmdesign.net/handouts/DFS.pdf
https://www.hackerearth.com/practice/algorithms/graphs/depth-first-search/tutorial/
http://www.geeksforgeeks.org/depth-first-traversal-for-a-graph/
http://www.csc.lsu.edu/~kundu/dstr/2-depthFirst.pdf
https://en.wikipedia.org/wiki/Talk:Depth-first_search
http://www.cs.cornell.edu/courses/cs3110/2011sp/Recitations/rec19.htm
https://brilliant.org/wiki/the-substitution-method-for-solving-recurrences/
https://math.stackexchange.com/questions/19662/solving-recurrences-with-the-substitution-method
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-introduction-to-algorithms-sma-5503-fall-2005/video-lectures/lecture-2-asymptotic-notation-recurrences-substitution-master-method/
https://cs.stackexchange.com/questions/14347/solving-recurrences-using-substitution-method
http://www.bowdoin.edu/~ltoma/teaching/cs231/fall07/Lectures/reccurences.pdf
https://stackoverflow.com/questions/14230639/substitution-method-for-solving-recurrences
https://math.stackexchange.com/questions/43378/using-the-substitution-method-for-solving-recurrences
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-introduction-to-algorithms-sma-5503-fall-2005/video-lectures/lecture-2-asymptotic-notation-recurrences-substitution-master-method/lec2.pdf
https://en.wikipedia.org/wiki/Randomized_algorithm
http://www.gemusehaken.org/people/pip/ralg-all.pdf
https://www.cs.indiana.edu/~achauhan/Teaching/B403/LectureNotes/04-randomized.html
http://www.cs.cmu.edu/~avrim/451f11/lectures/lect0906.pdf
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-856j-randomized-algorithms-fall-2002/
http://algo.ics.hawaii.edu/~nodari/teaching/f15/Notes/Topic-05.html
https://www2.hawaii.edu/~janst/311/Notes/Topic-05.html
http://www.albany.edu/~csi503/pdfs/lect06.pdf
http://cs.brown.edu/courses/cs155/slides/Chapter-1.pdf
http://www.eecg.toronto.edu/~ece1762/hw/rand.pdf
https://en.wikipedia.org/wiki/Floyd%E2%80%93Warshall_algorithm
http://www.geeksforgeeks.org/dynamic-programming-set-16-floyd-warshall-algorithm/
http://math.mit.edu/~rothvoss/18.304.1PM/Presentations/1-Chandler-18.304lecture1.pdf
http://www.cs.umd.edu/~meesh/351/mount/lectures/lect24-floyd-warshall.pdf
http://mathworld.wolfram.com/Floyd-WarshallAlgorithm.html
https://brilliant.org/wiki/floyd-warshall-algorithm/
https://en.wikipedia.org/wiki/Talk:Floyd%E2%80%93Warshall_algorithm
https://www.cs.usfca.edu/~galles/visualization/Floyd.html
https://www.youtube.com/watch?v=Qdt5WJVkPbY
http://cs.winona.edu/lin/cs440/ch08-2.pdf
https://en.wikipedia.org/wiki/Heapsort
http://www.geeksforgeeks.org/heap-sort/
https://rosettacode.org/wiki/Sorting_algorithms/Heapsort
http://faculty.simpson.edu/lydia.sinapova/www/cmsc250/LN250_Weiss/L13-HeapSortEx.htm
http://www.codecodex.com/wiki/Heapsort
https://www.youtube.com/watch?v=6NB0GHY11Iw
http://cis.stvincent.edu/html/tutorials/swd/heaps/heaps.html
https://www.cprogramming.com/tutorial/computersciencetheory/heapsort.html
https://www.codeproject.com/tips/732196/heap-data-structure-and-heap-sort
https://en.wikipedia.org/wiki/Ford%E2%80%93Fulkerson_algorithm
https://www.youtube.com/watch?v=Tl90tNtKvxs
http://www.cse.iitd.ernet.in/~naveen/courses/CSL758/Ford%20Fulkerson%20Algorithm.ppt
http://www.cse.unt.edu/~tarau/teaching/AnAlgo/Ford%e2%80%93Fulkerson%20algorithm.pdf
http://weierstrass.is.tokushima-u.ac.jp/ikeda/suuri/maxflow/Maxflow.shtml
http://web.stanford.edu/~ashishg/msande212/MaxFlowJavaDemo/Java%20Applet%20Demos%20of%20Ford-Fulkerson's%20Algorithm.htm
http://www.geeksforgeeks.org/ford-fulkerson-algorithm-for-maximum-flow-problem/
https://brilliant.org/wiki/ford-fulkerson-algorithm/
http://awesom.eu/~acieroid/IA/DDU0162.html
https://mitpress.mit.edu/sites/default/files/titles/content/9780262033848_sch_0001.pdf
http://broadcast.oreilly.com/2009/06/may-column-multithreaded-algor.html
http://crystal.uta.edu/~gonzalez/alg/CSE-5311-15.html
https://www.cs.indiana.edu/~achauhan/Teaching/B403/LectureNotes/11-multithreaded.html
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-172-performance-engineering-of-software-systems-fall-2010/video-lectures/lecture-14-analysis-of-multithreaded-algorithms/
https://www.codeproject.com/Articles/1062000/Multithreaded-Parallel-Selection-Sort-Algorithm-Ha
http://www.csd.uwo.ca/~moreno/CS433-CS9624/Lectures/3.pdf
http://faculty.cs.tamu.edu/klappi/csce411-f12/csce411-setMultithreaded.pdf
http://www.sandia.gov/~egboman/papers/ParallelMaximumMatching.pdf
https://en.wikipedia.org/wiki/Multithreading_(software)
https://en.wikipedia.org/wiki/Optimal_binary_search_tree
https://en.wikipedia.org/wiki/Binary_search_tree
https://alg12.wikischolars.columbia.edu/file/view/OPTIMALBST.pdf
https://www.youtube.com/watch?v=hgA4xxlVvfQ
https://www.cs.auckland.ac.nz/software/AlgAnim/opt_bin.html
http://radford.edu/~nokie/classes/360/dp-opt-bst.html
http://www.cs.man.ac.uk/~graham/COMP20012/dynamic/optbintree/
http://www.cs.tut.fi/~elomaa/teach/AADS-2014-8.pdf
http://software.ucv.ro/~cmihaescu/ro/laboratoare/SDA/docs/arboriOptimali_en.pdf
http://www.geeksforgeeks.org/dynamic-programming-set-24-optimal-binary-search-tree/
https://www.courses.psu.edu/for/for466w_mem14/Ch11/HTML/Sec2/ch11sec2.htm
http://people.brunel.ac.uk/~mastjjb/jeb/or/lpmore.html
https://www.youtube.com/watch?v=auDr5RJd1VE
https://en.wikipedia.org/wiki/Linear_programming
http://econweb.ucsd.edu/~jsobel/172aw02/notes1.pdf
http://web.mit.edu/15.053/www/AMP-Chapter-02.pdf
http://wps.prenhall.com/wps/media/objects/2234/2288589/ModB.pdf
https://brainmass.com/business/derivatives/formulating-linear-program-515832
http://myweb.ecu.edu/macleodk/LinearProgrammingLectures/FormulatingLPProblems.doc
http://people.brunel.ac.uk/~mastjjb/jeb/or/lp.html
https://en.wikipedia.org/wiki/Computer_science
https://pages.mtu.edu/~john/whatiscs.html
https://www.khanacademy.org/computing/computer-science
http://www.cs.bu.edu/AboutCS/WhatIsCS.pdf
https://www.usnews.com/best-graduate-schools/top-science-schools/computer-science-rankings
https://csweb.rice.edu/
https://csci.williams.edu/
https://www-cs.stanford.edu/
https://www.britannica.com/topic/computer-science
https://www.cs.cornell.edu/
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-856j-randomized-algorithms-fall-2002/
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-856j-randomized-algorithms-fall-2002/lecture-notes/
https://books.google.com/books/about/Randomized_Algorithms.html?id=QKVY4mDivBEC
https://www.khanacademy.org/computing/computer-science/cryptography/random-algorithms-probability/v/randomized-algorithms-prime-adventure-part-8
https://people.eecs.berkeley.edu/~luca/cs174/
https://rajsain.files.wordpress.com/2013/11/randomized-algorithms-motwani-and-raghavan.pdf
http://community.wvu.edu/~krsubramani/courses/fa01/random/lecnotes/lecture2.pdf
http://web.stanford.edu/~ashishg/cme309/
http://www.ece.northwestern.edu/~nickle/randAlg/Karp91.pdf
http://theory.stanford.edu/people/pragh/amstalk.pdf
http://www.themathpage.com/aCalc/max.htm
http://tutorial.math.lamar.edu/Classes/CalcI/MinMaxValues.aspx
https://en.wikipedia.org/wiki/Maxima_and_minima
https://www.wikihow.com/Find-the-Maximum-or-Minimum-Value-of-a-Quadratic-Function-Easily
https://www.mathsisfun.com/algebra/functions-maxima-minima.html
https://en.wikipedia.org/wiki/Minimum_Maximum
https://www.thoughtco.com/what-are-the-maximum-and-minimum-3126236
http://www.1728.org/minmax.htm
https://www.khanacademy.org/math/calculus-home/derivative-applications-calc/critical-points-calc/v/identifying-relative-extrema
https://www.bwc.ohio.gov/employer/services/paidcomp/paidcomp.asp
https://www.khanacademy.org/computing/computer-science/algorithms/graph-representation/a/representing-graphs
http://www.geeksforgeeks.org/graph-and-its-representations/
https://en.wikipedia.org/wiki/Graph_(abstract_data_type)
https://people.sc.fsu.edu/~jburkardt/m_src/graph_representation/graph_representation.html
https://mathoverflow.net/questions/283180/orthogonal-representations-of-graphs
https://www.youtube.com/watch?v=eEQ00TKw1Ww
http://web.cs.elte.hu/~lovasz/geomrep.pdf
http://www.stoimen.com/blog/2012/08/31/computer-algorithms-graphs-and-their-representation/
https://en.wikipedia.org/wiki/Adjacency_matrix
https://link.springer.com/chapter/10.1007/978-3-319-27261-0_19
https://en.wikipedia.org/wiki/Activity_selection_problem
http://www.geeksforgeeks.org/greedy-algorithms-set-1-activity-selection-problem/
https://www.youtube.com/watch?v=U8QPW7-SqyM
http://studenthome.in/activity-selection-problem/
http://www.zrzahid.com/weighted-jobinterval-scheduling-activity-selection-problem/
https://stackoverflow.com/questions/33594525/implementing-activity-selection-prob-using-dynamic-programming
https://www.coursehero.com/file/15238793/Greedy-ActivitySelection/
https://edurev.in/studytube/Dynamic-Programming-Weighted-activity-selection-pr/17a2d320-e523-4974-8873-3623f75ba9ff_p
http://www.sourcecodeonline.com/list?q=activity_selection_problem_in_java_for_download
https://stackoverflow.com/questions/17270628/insertion-sort-vs-bubble-sort-algorithms
http://theoryapp.com/selection-insertion-and-bubble-sort/
https://en.wikipedia.org/wiki/Bubble_sort_algorithm
http://code.cheraus.com/codes/c/sorting-techniques.php
https://stackoverflow.com/questions/10428336/insertion-sort-better-than-bubble-sort
https://www.cprogramming.com/tutorial/computersciencetheory/sorting2.html
https://www.quora.com/In-laymans-terms-what-is-the-difference-between-a-bubble-sort-and-an-insert-sort
https://en.wikipedia.org/wiki/Insertsort
https://www.toptal.com/developers/sorting-algorithms/bubble-sort
https://rosettacode.org/wiki/Sorting_algorithms/Insertion_sort
http://www.radford.edu/~nokie/classes/360/dp-rod-cutting.html
http://faculty.ycp.edu/~dbabcock/PastCourses/cs360/lectures/lecture12.html
https://www.ebay.com/sch/i.html?_nkw=cutting+rod
https://www.amazon.com/cutting-rod/s?ie=UTF8&page=1&rh=i%3Aaps%2Ck%3Acutting%20rod
https://www.etsy.com/market/rod_cutting
https://www.youtube.com/watch?v=IRwVmTmN6go
http://www.harrisproductsgroup.com/en/Products/Alloys/Welding/Maintenance-and-Repair/Cut-Rod.aspx
http://www.utdallas.edu/~daescu/rodcut.pptx
http://ellsencuttingmachine.com/rod-cutting-machine/
http://algorithms.tutorialhorizon.com/dynamic-programming-rod-cutting-problem/
https://en.wikipedia.org/wiki/Divide_and_conquer
https://idioms.thefreedictionary.com/divide+and+conquer
http://www.wisegeek.org/what-is-a-divide-and-conquer-strategy.htm
http://divideandconquerofeasttexas.com/
https://www.merriam-webster.com/dictionary/divide%20and%20conquer
http://www.divideandconquerofeasttexas.com/nextsales.php
https://en.wikipedia.org/wiki/Divide_and_rule
http://tvtropes.org/pmwiki/pmwiki.php/Main/DivideAndConquer
http://www.geeksforgeeks.org/analysis-algorithm-set-4-master-method-solving-recurrences/
http://www.cs.cornell.edu/courses/cs3110/2012sp/lectures/lec20-master/lec20.html
https://en.wikipedia.org/wiki/Master_theorem
http://web.cs.ucdavis.edu/~gusfield/cs222f07/mastermethod.pdf
http://techieme.in/solving-recurrences-master-method/
http://www.csd.uwo.ca/~moreno/CS433-CS9624/Resources/master.pdf
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-introduction-to-algorithms-sma-5503-fall-2005/video-lectures/lecture-2-asymptotic-notation-recurrences-substitution-master-method/
http://www.bowdoin.edu/~ltoma/teaching/cs231/fall07/Lectures/reccurences.pdf
http://jeffe.cs.illinois.edu/teaching/algorithms/notes/99-recurrences.pdf
http://www.purplemath.com/modules/linprog.htm
https://en.wikipedia.org/wiki/Linear_programming
http://www.onlinemathlearning.com/linear-programming-example.html
https://www.math.ucla.edu/~tom/LP.pdf
https://www.mathworks.com/help/optim/ug/linprog.html?requestedDomain=www.mathworks.com
https://www.merriam-webster.com/dictionary/linear%20programming
http://mathworld.wolfram.com/LinearProgramming.html
http://math.tutorvista.com/algebra/linear-programing.html
https://www-01.ibm.com/software/commerce/optimization/linear-programming/
https://people.eecs.berkeley.edu/~vazirani/algorithms/chap7.pdf
https://en.wikipedia.org/wiki/Greedy_algorithm
https://people.eecs.berkeley.edu/~vazirani/algorithms/chap5.pdf
http://whatis.techtarget.com/definition/greedy-algorithm
http://jeffe.cs.illinois.edu/teaching/algorithms/notes/07-greedy.pdf
https://codility.com/media/train/14-GreedyAlgorithms.pdf
https://brilliant.org/wiki/greedy-algorithm/
https://en.wikibooks.org/wiki/Algorithms/Greedy_Algorithms
https://www.hackerearth.com/practice/algorithms/greedy/basics-of-greedy-algorithms/tutorial/
http://www.geeksforgeeks.org/greedy-algorithms-set-1-activity-selection-problem/
http://www.cs.princeton.edu/~wayne/kleinberg-tardos/pdf/04GreedyAlgorithmsI.pdf
http://www.cs.uml.edu/~giam/91.404/Lectures/404_Ch5_Lecture.pdf
http://theory.stanford.edu/~sergei/slides/hiring-dagstuhl.pdf
http://eqhelp.com/Hiring_Problems.htm
http://www.impacthiringsolutions.com/blog/solving-the-number-one-hiring-problem-can-be-done/
https://stackoverflow.com/questions/3874868/minimizing-the-cost-of-using-the-hiring-problem
https://www.recruiter.com/i/the-16-biggest-hiring-problems-youll-face-in-2016-infographic/
https://www.forbes.com/sites/adammillsap/2017/07/03/the-opioid-problem-is-an-employment-problem/
https://www.americanexpress.com/us/small-business/openforum/articles/6-types-employees-watch/
http://www.thearc.org/what-we-do/public-policy/policy-issues/employment
http://www.employmentissues.net/
https://www.cs.drexel.edu/~amd435/courses/cs260/lectures/L-9_2_Order_statistics_1P.pdf
https://www.cs.rochester.edu/~gildea/csc282/slides/C09-median.pdf
https://www.scribd.com/document/99999311/Analysis-of-Algorithms-Medians-and-Order-Statistics
https://www.scribd.com/document/247074601/08-Medians-and-Order-Statistics
https://www.slideshare.net/rajendranjrf/medians-and-order-statistics-71991355
http://www.idt.mdh.se/kurser/cd5370/04/lecture8_medians_and_order_statistics.pdf
http://cs.bilkent.edu.tr/~reha/473/07-MedianAndOrderStatistics.pdf
https://brainmass.com/computer-science/c/medians-and-order-statistics-71589
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-introduction-to-algorithms-sma-5503-fall-2005/video-lectures/lecture-6-order-statistics-median/
https://en.wikipedia.org/wiki/Flow_network
http://www.flow-network.com/
http://www.es.ele.tue.nl/education/5MC10/9flow.pdf
https://www.flownetworks.co.uk/
http://dataflownetworks.com/
https://web.stanford.edu/class/cs97si/08-network-flow-problems.pdf
http://www.cs.cornell.edu/~wdtseng/icpc/notes/graph_part5.pdf
http://www.cs.cmu.edu/~avrim/451f11/lectures/lect1025.pdf
http://www.sciencedirect.com/science/book/9780123983961
https://www.flowcontrolnetwork.com/
https://en.wikipedia.org/wiki/Topological_sorting
http://www.geeksforgeeks.org/topological-sorting/
http://www.cs.cornell.edu/courses/cs312/2004fa/lectures/lecture15.htm
http://www.stoimen.com/blog/2012/10/01/computer-algorithms-topological-sort-of-a-graph/
https://www.hackerearth.com/practice/algorithms/graphs/topological-sort/tutorial/
https://stackoverflow.com/questions/tagged/topological-sort
http://www3.cs.stonybrook.edu/~algorith/files/topological-sorting.shtml
http://faculty.simpson.edu/lydia.sinapova/www/cmsc250/LN250_Weiss/L20-TopSort.htm
https://www.codeproject.com/articles/869059/topological-sorting-in-csharp
https://en.wikipedia.org/wiki/Talk:Topological_sorting
https://stackoverflow.com/questions/4116325/multi-thread-matrix-multiplication
https://stackoverflow.com/questions/27334005/java-multi-thread-matrix-multiplication
http://www.sourcecodesworld.com/source/show.asp?ScriptID=128
https://www.mathworks.com/matlabcentral/answers/150973-multithreaded-sparse-matrix-multiplication?requestedDomain=www.mathworks.com
https://zhaowuluo.wordpress.com/2011/01/03/pthread-atrix-multiplication-on-unixlinux/
https://social.msdn.microsoft.com/Forums/en-US/87e0dfe6-49c1-47e5-b9dc-cd37cf95cf4e/matrix-multiplication-multithreading?forum=vblanguage
https://www.daniweb.com/programming/software-development/threads/231356/matrix-multiplication-with-multi-threading
https://software.intel.com/en-us/articles/matrix-vector-multiplication-and-multi-threading-benefits/
https://athemathmo.github.io/2016/04/25/multithreading-multiplication-2.html
https://github.com/Tacuma/Matrix-Multiplication-Using-Threads/blob/master/matrixmultiplication/MatrixMultiplication.java
https://en.wikipedia.org/wiki/Maximum_subarray_problem
https://leetcode.com/problems/maximum-subarray/
https://www.hackerrank.com/challenges/maxsubarray
https://stackoverflow.com/questions/7943903/maximum-subarray-of-an-array-with-integers
http://www.geeksforgeeks.org/divide-and-conquer-maximum-sum-subarray/
http://www.geeksforgeeks.org/largest-sum-contiguous-subarray/
http://www.utdallas.edu/~daescu/max-subarray.pptx
https://www.hackerrank.com/challenges/maximum-subarray-sum
http://www.jiuzhang.com/solutions/maximum-subarray/
https://www.youtube.com/watch?v=ohHWQf1HDfU
http://math.mit.edu/~rothvoss/18.304.1PM/Presentations/2-Chandler-slideslect2.pdf
https://link.springer.com/referenceworkentry/10.1007/978-3-642-27848-8_12-2
https://link.springer.com/referenceworkentry/10.1007/978-0-387-30162-4_12
http://www.diku.dk/PATH05/Uri1.pdf
https://link.springer.com/content/pdf/10.1007/11561071_68.pdf
http://www.cosc.canterbury.ac.nz/tad.takaoka/encyclo.pdf
https://resources.mpi-inf.mpg.de/departments/d1/teaching/ss12/AdvancedGraphAlgorithms/Slides14.pdf
http://users.cecs.anu.edu.au/~Alistair.Rendell/Teaching/apac_comp3600/module4/all_pairs_shortest_paths.xhtml
https://www.cs.vassar.edu/~walter/cs241index/lectures/PDF/APSP.pdf
https://en.wikipedia.org/wiki/Shortest_path_problem
https://en.wikipedia.org/wiki/Priority_queue
https://algs4.cs.princeton.edu/24pq/
http://pages.cs.wisc.edu/~vernon/cs367/notes/11.PRIORITY-Q.html
http://www.cplusplus.com/reference/queue/priority_queue/
https://docs.microsoft.com/en-us/azure/architecture/patterns/priority-queue
http://cs.lmu.edu/~ray/notes/pqueues/
https://www.cs.purdue.edu/homes/ayg/CS251/slides/chap6.pdf
https://docs.oracle.com/javase/7/docs/api/java/util/PriorityQueue.html
https://www.cs.princeton.edu/~rs/AlgsDS07/06PriorityQueues.pdf
https://msdn.microsoft.com/en-us/library/4ef4dae9.aspx
https://en.wikipedia.org/wiki/Simplex_algorithm
http://mathworld.wolfram.com/SimplexMethod.html
https://www.wikihow.com/Carry-out-the-Simplex-Algorithm
https://www.princeton.edu/~rvdb/542/lectures/lec2.pdf
https://www.youtube.com/watch?v=XK26I9eoSl8
http://www.mathstools.com/
http://mat.gsia.cmu.edu/classes/QUANT/NOTES/chap7.pdf
http://www.phpsimplex.com/en/simplex_method_example.htm
http://www.zweigmedia.com/RealWorld/tutorialsf4/frames4_3.html
https://people.richland.edu/james/ictcm/2006/simplex.html
http://www.ijera.com/papers/vol%201%20issue%203/J013446448.pdf
http://www.cs.fsu.edu/~burmeste/slideshow/chapter16/16-2.html
http://www.eecs.wsu.edu/~cook/aa/lectures/l8/node15.html
https://en.wikipedia.org/wiki/Dynamic_programming
https://www.cs.bgu.ac.il/~michaluz/seminar/SMAWK.pdf
https://stackoverflow.com/questions/25337401/dynamic-programming-algorithm-to-delete-k-elements-in-an-array
https://www.amazon.com/Elements-Dynamic-Optimization-Alpha-Chiang/dp/157766096X
http://20bits.com/article/introduction-to-dynamic-programming
https://en.wikipedia.org/wiki/Longest_common_subsequence_problem
https://www.ics.uci.edu/~eppstein/161/960229.html
http://www.cs.umd.edu/~meesh/351/mount/lectures/lect25-longest-common-subseq.pdf
https://www.youtube.com/watch?v=NnD96abizww
http://www.columbia.edu/~cs2035/courses/csor4231.F11/lcs.pdf
https://rosettacode.org/wiki/Longest_common_subsequence
https://en.wikipedia.org/wiki/Longest_common_substring
http://www.geeksforgeeks.org/longest-common-subsequence/
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-introduction-to-algorithms-sma-5503-fall-2005/video-lectures/lecture-15-dynamic-programming-longest-common-subsequence/
https://www.hackerrank.com/challenges/dynamic-programming-classics-the-longest-common-subsequence
https://www.thefreedictionary.com/duality
https://www.merriam-webster.com/dictionary/duality
https://en.wikipedia.org/wiki/Duality
http://www.dictionary.com/browse/duality
https://www.vocabulary.com/dictionary/duality
http://www.thesaurus.com/browse/duality
https://www.urbandictionary.com/define.php?term=duality
http://www.learnersdictionary.com/definition/duality
https://en.wikipedia.org/wiki/Dual_(mathematics)
https://www.youtube.com/watch?v=6fVE8kSM43I
http://crosswordheaven.com/clues/heaps
https://www.thefreedictionary.com/heaps
https://en.wikipedia.org/wiki/Heap_%28data_structure%29
http://www.thesaurus.com/browse/heaps
http://heapsapp.com/
https://www.merriam-webster.com/dictionary/heap
http://www.dictionary.com/browse/heaps
https://www.facebook.com/heapsapp
https://www.urbandictionary.com/define.php?term=heaps
https://www.thefreedictionary.com/heap
https://en.wikipedia.org/wiki/Dynamic_programming
https://people.eecs.berkeley.edu/~vazirani/algorithms/chap6.pdf
https://www.topcoder.com/community/data-science/data-science-tutorials/dynamic-programming-from-novice-to-advanced/#!
https://stackoverflow.com/questions/1065433/what-is-dynamic-programming
https://www.codechef.com/wiki/tutorial-dynamic-programming
https://web.stanford.edu/class/cs97si/04-dynamic-programming.pdf
http://mat.gsia.cmu.edu/classes/dynamic/dynamic.html
https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/types/using-type-dynamic
https://people.cs.clemson.edu/~bcdean/dp_practice/
http://20bits.com/article/introduction-to-dynamic-programming
https://en.wikipedia.org/wiki/Shortest_path_problem
http://www.geeksforgeeks.org/shortest-path-for-directed-acyclic-graphs/
https://en.wikipedia.org/wiki/Directed_acyclic_graph
https://www.youtube.com/watch?v=ePqBaDRHkdk
http://www.mathcs.emory.edu/~cheung/Courses/171/Syllabus/11-Graph/Docs/longest-path-in-dag.pdf
http://www.sanfoundry.com/java-program-find-sssp-dag/
http://boost.sourceforge.net/libs/graph/doc/dag_shortest_paths.html
https://www.cs.vassar.edu/~walter/cs241index/lectures/PDF/SSSP.pdf
https://www.youtube.com/watch?v=WdcrM7YWBP8
https://courses.csail.mit.edu/6.006/spring11/lectures/lec15.pdf
https://en.wikipedia.org/wiki/Heapsort
https://www.toptal.com/developers/sorting-algorithms/heap-sort
http://rosettacode.org/wiki/Sorting_algorithms/Heapsort
https://en.wikibooks.org/wiki/Algorithm_Implementation/Sorting/Heapsort
http://www.studytonight.com/data-structures/heap-sort
http://www.zentut.com/c-tutorial/c-heapsort/
https://www.youtube.com/watch?v=PqS5T9ZKZno
https://www.codingbot.net/2013/05/heap-sort-c-code-and-algorithm.html
http://faculty.simpson.edu/lydia.sinapova/www/cmsc250/LN250_Weiss/L13-HeapSortEx.htm
https://en.wikipedia.org/wiki/Shortest_path_problem
https://en.wikipedia.org/wiki/Floyd%E2%80%93Warshall_algorithm
http://mathworld.wolfram.com/All-PairsShortestPath.html
http://web.engr.illinois.edu/~jeffe/teaching/algorithms/notes/22-apsp.pdf
http://www.cs.cornell.edu/~wdtseng/icpc/notes/graph_part3.pdf
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2015/lecture-notes/MIT6_046JS15_lec11.pdf
https://www.cs.vassar.edu/~walter/cs241index/lectures/PDF/APSP.pdf
http://users.cecs.anu.edu.au/~Alistair.Rendell/Teaching/apac_comp3600/module4/all_pairs_shortest_paths.xhtml
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2012/lecture-notes/MIT6_046JS12_lec06.pdf
https://en.wikipedia.org/wiki/Matching_(graph_theory)
https://www.cs.cmu.edu/~ckingsf/bioinfo-lectures/matching.pdf
http://www.geeksforgeeks.org/maximum-bipartite-matching/
http://pages.cs.wisc.edu/~shuchi/courses/787-F09/scribe-notes/lec5.pdf
http://www.csl.mtu.edu/cs4321/www/Lectures/Lecture%2022%20-%20Maximum%20Matching%20in%20Bipartite%20Graph.htm
http://www-math.mit.edu/~goemans/18433S09/matching-notes.pdf
https://stackoverflow.com/questions/14824320/maximum-weighted-bipartite-matching-with-directed-edges
https://visualgo.net/en/matching
http://www.mcs.csueastbay.edu/~simon/handouts/4245/hall.html
https://en.wikipedia.org/wiki/Hopcroft%E2%80%93Karp_algorithm
https://en.wikipedia.org/wiki/Johnson%27s_algorithm
https://brilliant.org/wiki/johnsons-algorithm/
https://github.com/vvy/Johnson-s-algorithm
https://www.coursehero.com/file/p3qkq0q/Johnsons-Algorithm-An-OV2-lg-V-VE-algorithm-Good-for-sparse-graphs-Uses/
http://www.codeforge.com/s/3/johnson%20algorithm%20sparse%20graph
http://www.sourcecodeonline.com/list?q=johnsons_algorithm_for_sparse_graphs
https://www.cs.bgu.ac.il/~algo122/wiki.files/Algo122-assignment2-JohnsonsAlgorithm.pdf
http://www.geeksforgeeks.org/johnsons-algorithm/
https://www.scribd.com/doc/79374136/Johnson-s-Algorithm
https://en.wikipedia.org/wiki/Breadth-first_search
https://www.ics.uci.edu/~eppstein/161/960215.html
https://www.tutorialspoint.com/data_structures_algorithms/breadth_first_traversal.htm
https://www.youtube.com/watch?v=QRq6p9s8NVg
http://www.geeksforgeeks.org/breadth-first-traversal-for-a-graph/
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/lecture-videos/lecture-13-breadth-first-search-bfs/
https://www.hackerearth.com/practice/algorithms/graphs/breadth-first-search/tutorial/
https://www.youtube.com/watch?v=s-CYnVz-uh4
http://interactivepython.org/courselib/static/pythonds/Graphs/ImplementingBreadthFirstSearch.html
https://www.cs.bu.edu/teaching/c/tree/breadth-first/
https://www.cs.cmu.edu/~adamchik/15-121/lectures/Algorithmic%20Complexity/complexity.html
https://en.wikipedia.org/wiki/Computational_complexity_theory
https://en.wikipedia.org/wiki/Analysis_of_algorithms
http://bigocheatsheet.com/
http://discrete.gr/complexity/
http://algorithmiccomplexity.com/
http://www.scholarpedia.org/article/Algorithmic_complexity
https://www.math.upenn.edu/~wilf/AlgoComp.pdf
http://algorithmiccomplexity.com/about/
https://people.duke.edu/~ccc14/sta-663/AlgorithmicComplexity.html
https://en.wikipedia.org/wiki/Big_O_notation
http://web.mit.edu/16.070/www/lecture/big_o.pdf
https://rob-bell.net/2009/06/a-beginners-guide-to-big-o-notation/
http://www.programmerinterview.com/index.php/data-structures/big-o-notation/
http://pages.cs.wisc.edu/~vernon/cs367/notes/3.COMPLEXITY.html
https://stackoverflow.com/questions/487258/what-is-a-plain-english-explanation-of-big-o-notation
https://www.khanacademy.org/computing/computer-science/algorithms/asymptotic-notation/a/big-o-notation
https://xlinux.nist.gov/dads/HTML/bigOnotation.html
https://justin.abrah.ms/computer-science/big-o-notation-explained.html
http://bigocheatsheet.com/
https://stackoverflow.com/questions/680541/quick-sort-vs-merge-sort
https://www.youtube.com/watch?v=es2T6KY45cA
https://www.quora.com/What-is-the-difference-between-quicksort-and-mergesort
https://en.wikipedia.org/wiki/Merge_sort
https://www.quora.com/Why-is-quicksort-considered-to-be-better-than-merge-sort
https://algs4.cs.princeton.edu/lectures/22Mergesort.pdf
http://www.cs.princeton.edu/courses/archive/spr07/cos226/lectures/04MergeQuick.pdf
https://en.wikipedia.org/wiki/Quicksort
https://www.cs.wcupa.edu/rkline/ds/fast-sorts.html
http://www3.cs.stonybrook.edu/~skiena/214/lectures/lect17/lect17.html
http://www.cs.cornell.edu/courses/cs3110/2012sp/lectures/lec20-master/lec20.html
https://www.youtube.com/watch?v=lYa4RtMpuMs
https://stackoverflow.com/questions/12382448/recursion-tree-method-of-solving-recurrences
http://jeffe.cs.illinois.edu/teaching/algorithms/notes/99-recurrences.pdf
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-introduction-to-algorithms-sma-5503-fall-2005/video-lectures/lecture-2-asymptotic-notation-recurrences-substitution-master-method/lec2.pdf
http://www.geeksforgeeks.org/analysis-algorithm-set-4-master-method-solving-recurrences/
http://www.radford.edu/~nokie/classes/360/recurrence.eqns.revised.html
http://www.bowdoin.edu/~ltoma/teaching/cs231/fall07/Lectures/reccurences.pdf
https://web.stanford.edu/class/archive/cs/cs161/cs161.1168/lecture3.pdf
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-introduction-to-algorithms-sma-5503-fall-2005/video-lectures/lecture-2-asymptotic-notation-recurrences-substitution-master-method/
https://en.wikipedia.org/wiki/Minimum_spanning_tree
https://algs4.cs.princeton.edu/43mst/
https://www.ics.uci.edu/~eppstein/161/960206.html
https://algs4.cs.princeton.edu/lectures/43MinimumSpanningTrees.pdf
http://www.people.vcu.edu/~gasmerom/MAT131/mst.html
http://mathworld.wolfram.com/MinimumSpanningTree.html
https://en.wikipedia.org/wiki/Kruskal%27s_algorithm
http://www.columbia.edu/~cs2035/courses/ieor6614.S11/mst.pdf
https://www.cs.princeton.edu/~rs/AlgsDS07/14MST.pdf
https://simple.wikipedia.org/wiki/Minimum_spanning_tree
https://en.wikipedia.org/wiki/Huffman_coding
https://mitpress.mit.edu/sicp/full-text/sicp/book/node41.html
https://rosettacode.org/wiki/Huffman_coding
http://www.utdallas.edu/~daescu/huffman.ppt
https://www.cs.duke.edu/csed/poop/huff/info/
http://www.geeksforgeeks.org/greedy-algorithms-set-3-huffman-coding/
http://www.compressconsult.com/huffman/
http://www.csc.lsu.edu/~kundu/dstr/4-huffman.pdf
http://mathworld.wolfram.com/HuffmanCoding.html
http://planetcalc.com/2481/
https://en.wikipedia.org/wiki/Analysis_of_algorithms
http://aofa.cs.princeton.edu/10analysis/
http://aofa.cs.purdue.edu/
http://openclassroom.stanford.edu/MainFolder/CoursePage.php?course=IntroToAlgorithms
https://www.cs.purdue.edu/homes/ayg/CS251/slides/chap2.pdf
http://www.geeksforgeeks.org/algorithms-gq/analysis-of-algorithms-gq/
http://aofa.cs.princeton.edu/home/
https://algs4.cs.princeton.edu/14analysis/
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-046j-design-and-analysis-of-algorithms-spring-2015/lecture-notes/MIT6_046JS15_lec14A.pdf
https://www.tutorialspoint.com/design_and_analysis_of_algorithms/design_and_analysis_of_algorithms_tutorial.pdf
https://cyberzhg.gitbooks.io/clrs/content/Chapter_27_Multithreaded_Algorithms/exercises_27.1.html
https://www.tutorialspoint.com/cplusplus/cpp_multithreading.htm
https://social.msdn.microsoft.com/Forums/en-US/67fd7374-7386-4e6e-b831-390082d6b7b4/dynamic-threading?forum=vblanguage
https://stackoverflow.com/questions/2016046/how-to-create-a-dynamic-number-of-threads
https://en.wikipedia.org/wiki/Multithreading_(computer_architecture)
https://www.codeproject.com/articles/616109/java-thread-tutorial
http://filemakerinspirations.com/2011/07/alarm-clocks-dynamic-multi-threading-with-web-viewers/
http://diranieh.com/NETThreading/MultithreadingBasics.htm
https://mitpress.mit.edu/sites/default/files/titles/sample/0262533057chap27.pdf
https://msdn.microsoft.com/en-us/library/eed6swsx(v=vs.90).aspx
https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm
http://www.geeksforgeeks.org/greedy-algorithms-set-6-dijkstras-shortest-path-algorithm/
http://math.mit.edu/~rothvoss/18.304.3PM/Presentations/1-Melissa.pdf
https://www.codeproject.com/articles/19919/shortest-path-problem-dijkstra-s-algorithm
https://www.cs.auckland.ac.nz/~jmor159/PLDS210/dijkstra.html
https://en.wikipedia.org/wiki/Djikstra
https://www.youtube.com/watch?v=gdmfOwyQlcI
http://mathworld.wolfram.com/DijkstrasAlgorithm.html
https://stackoverflow.com/questions/3447566/dijkstras-algorithm-in-c
http://mat.uab.cat/~alseda/MasterOpt/MyL09.pdf
https://en.wikipedia.org/wiki/Shortest_path_problem
https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm
http://www.cs.unc.edu/~plaisted/comp550/23-ssspaths.ppt
https://visualgo.net/en/sssp?slide=1
http://lcm.csa.iisc.ernet.in/dsa/node162.html
https://www.cs.princeton.edu/~rs/AlgsDS07/15ShortestPaths.pdf
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/lecture-videos/lecture-15-single-source-shortest-paths-problem/
https://www.youtube.com/watch?v=Aa2sqUhIn-E
https://algs4.cs.princeton.edu/44sp/
http://iss.ices.utexas.edu/?p=projects/galois/benchmarks/single_source_shortest_path
